.data
string_access_violation: .asciiz "Access Violation"
string_illegal_div_by_0: .asciiz "Illegal Division By Zero"
string_space_after_int:  .asciiz " "
string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
.text
############################
strlen:
	addi $sp,$sp,-8
	sw $s0, 0($sp)
	sw $s1, 4($sp)
	li $s0, 0
loop_strlen:
	lb $s1, 0($a0)
	beqz $s1, exit_strlen
	addi $a0, $a0, 1
	addi $s0, $s0, 1
	j loop_strlen
exit_strlen:
	move $v0, $s0
	lw $s0, 0($sp)
	lw $s1, 4($sp)
	addi $sp,$sp,8
	jr $ra
############################
strcpy:
	lb $s0 0($a0)
	beqz $s0, exit_strcpy
	sb $s0 0($a1)
	addi $a0 $a0 1
	addi $a1 $a1 1
	j strcpy
exit_strcpy:
	move $v0, $a1
	jr $ra
############################
strcon:
	addi $sp,$sp,-8
	sw $ra,0($sp)
	move $s0 ,$a2
	move $s1 ,$a0
	move $s2 ,$a1
	li $a0, 4
	mult $a0, $s0
	mflo $a0
	li $v0,9
	syscall
	move $s0,$v0
	sw $s0,4($sp)
	move $a1, $s0
	move $a0, $s1
	jal strcpy
	move $a1, $v0
	move $a0, $s2
	jal strcpy
	sb $zero, 0($v0)
	lw $s0, 4($sp)
	move $v0, $s0
	lw $ra, 0($sp)
	addi $sp,$sp,8
	jr $ra
############################
strcmp:
	addi $sp,$sp,-12
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	move $t2 ,$ra
	move $s0,$a0
	move $s1,$a1
	jal strlen
	move $t0 ,$v0
	move $a0 ,$s1
	move $a0,$s1
	jal strlen
	move $t1 ,$v0
	bne $t0,$t1,end_strcmp_false
strcmp_loop:
	lb $t0, 0($s0)
	lb $t1, 0($s1)
	beq $t0,$zero,end_strcmp_true
	bne $t0,$t1,end_strcmp_false
	addi $s0 $s0 1
	addi $s1 $s1 1
	j strcmp_loop
end_strcmp_true:
	li $v0, 0
	j strcmp_exit
end_strcmp_false:
	li $v0, 1
strcmp_exit:
	move $ra, $t2
	lw $t0, 0($sp)
	lw $t1, 4($sp)
	lw $t2, 8($sp)
	addi $sp,$sp,12
	jr $ra
############################
main:
	addi $sp $sp -4
	sw  $fp 0($sp)
	move $fp,$sp
	addi $sp,$sp,0
	li $t0,1
	li $t1,1
	li $t2,0
	beq $t1,$t2,Label_1_div_by_zero
	div $t0,$t1
	mflo $t1
Label_2_no_overflow:
	move $t0,$t1
	j Label_0_end
Label_1_div_by_zero:
	li $v0, 4
	la $a0, string_illegal_div_by_0
	syscall
	j END_OF_PROGRAM
	j Label_0_end
Label_0_end:
	move $a0,$t0
	li $v0,1
	syscall
	li $v0, 4
	la $a0, string_space_after_int
	syscall
	li $t0,1
	li $t1,2
	li $t2,0
	beq $t1,$t2,Label_4_div_by_zero
	div $t0,$t1
	mflo $t1
Label_5_no_overflow:
	move $t0,$t1
	j Label_3_end
Label_4_div_by_zero:
	li $v0, 4
	la $a0, string_illegal_div_by_0
	syscall
	j END_OF_PROGRAM
	j Label_3_end
Label_3_end:
	move $a0,$t0
	li $v0,1
	syscall
	li $v0, 4
	la $a0, string_space_after_int
	syscall
	li $t0,-1000
	li $t1,30
	li $t2,0
	beq $t1,$t2,Label_7_div_by_zero
	div $t0,$t1
	mflo $t1
Label_8_no_overflow:
	move $t0,$t1
	j Label_6_end
Label_7_div_by_zero:
	li $v0, 4
	la $a0, string_illegal_div_by_0
	syscall
	j END_OF_PROGRAM
	j Label_6_end
Label_6_end:
	move $a0,$t0
	li $v0,1
	syscall
	li $v0, 4
	la $a0, string_space_after_int
	syscall
	li $t0,17
	li $t1,17
	li $t2,0
	beq $t1,$t2,Label_10_div_by_zero
	div $t0,$t1
	mflo $t1
Label_11_no_overflow:
	move $t0,$t1
	j Label_9_end
Label_10_div_by_zero:
	li $v0, 4
	la $a0, string_illegal_div_by_0
	syscall
	j END_OF_PROGRAM
	j Label_9_end
Label_9_end:
	move $a0,$t0
	li $v0,1
	syscall
	li $v0, 4
	la $a0, string_space_after_int
	syscall
	li $t0,10000
	li $t1,-2
	li $t2,0
	beq $t1,$t2,Label_13_div_by_zero
	div $t0,$t1
	mflo $t1
Label_14_no_overflow:
	move $t0,$t1
	j Label_12_end
Label_13_div_by_zero:
	li $v0, 4
	la $a0, string_illegal_div_by_0
	syscall
	j END_OF_PROGRAM
	j Label_12_end
Label_12_end:
	move $a0,$t0
	li $v0,1
	syscall
	li $v0, 4
	la $a0, string_space_after_int
	syscall
	j END_OF_PROGRAM
##### End of main function
END_OF_PROGRAM:
	li $v0,10
	syscall
