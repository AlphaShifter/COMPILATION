.data
string_access_violation: .asciiz "Access Violation"
string_illegal_div_by_0: .asciiz "Illegal Division By Zero"
string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
.text
### start with main function
j main
############################
strlen:
	li $s0, 0
loop_strlen:
	lw $s1, 0($a0)
	beqz $s1, exit_strlen
	addi $a0, $a0, 4
	addi $s0, $s0, 1
	j loop_strlen
exit_strlen:
	move $v0, $s0
	jr $ra
############################
strcpy:
	lb $s0 0($a0)
	beqz $s0, exit_strcpy
	sb $s0 0($a1)
	addi $a0 $a0 1
	addi $a1 $a1 1
	j strcpy
exit_strcpy:
	move $v0, $a1
	jr $ra
############################
strcon:
	addi $sp,$sp,-8
	sw $ra,0($sp)
	move $s0 ,$a2
	move $s1 ,$a0
	move $s2 ,$a1
	li $a0, 4
	mult $a0, $s0
	mflo $a0
	li $v0,9
	syscall
	move $s0,$v0
	sw $s0,4($sp)
	move $a1, $s0
	move $a0, $s1
	jal strcpy
	move $a1, $v0
	move $a0, $s2
	jal strcpy
	sb $zero, 0($v0)
	lw $s0, 4($sp)
	move $v0, $s0
	lw $ra, 0($sp)
	addi $sp,$sp,8
	jr $ra
############################
main:
	addi $sp $sp -4
	sw  $fp 0($sp)
	move $fp,$sp
	addi $sp,$sp,-20
	li $t0,12
	sw $t0, -4($fp)
	li $t0,4
	sw $t0, -8($fp)
	sw $zero, -12($fp)
	lw $t0, -8($fp)
	move $t0,$t0
	lw $t1, -4($fp)
	move $t1,$t1
	beq $t0,$t1,Label_10_equal
	bne $t0,$t1,Label_11_not_equal
Label_10_equal:
	li $t0,1
	j Label_12_end
Label_11_not_equal:
	li $t0,0
	j Label_12_end
Label_12_end:
	beq $t0,$zero,Label_0_End_if_block
	lw $t0, -4($fp)
	move $t0,$t0
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	j END_OF_PROGRAM
Label_0_End_if_block:
	lw $t0, -8($fp)
	move $t0,$t0
	li $t1,1
	beq $t0,$t1,Label_13_equal
	bne $t0,$t1,Label_14_not_equal
Label_13_equal:
	li $t0,1
	j Label_15_end
Label_14_not_equal:
	li $t0,0
	j Label_15_end
Label_15_end:
	beq $t0,$zero,Label_1_End_if_block
	lw $t0, -4($fp)
	move $t0,$t0
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	j END_OF_PROGRAM
Label_1_End_if_block:
	lw $t0, -4($fp)
	move $t0,$t0
	li $t1,1
	beq $t0,$t1,Label_16_equal
	bne $t0,$t1,Label_17_not_equal
Label_16_equal:
	li $t0,1
	j Label_18_end
Label_17_not_equal:
	li $t0,0
	j Label_18_end
Label_18_end:
	beq $t0,$zero,Label_2_End_if_block
	lw $t0, -8($fp)
	move $t0,$t0
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	j END_OF_PROGRAM
Label_2_End_if_block:
	li $t0,1
	lw $t1, -4($fp)
	move $t1,$t1
	li $t2,1
	beq $t1,$t2,Label_19_equal
	bne $t1,$t2,Label_20_not_equal
Label_19_equal:
	li $t1,1
	j Label_21_end
Label_20_not_equal:
	li $t1,0
	j Label_21_end
Label_21_end:
	li $t2,32767
	li $t3,-32767
	sub $t0,$t0,$t1
	blt $t2,$t0,Label_23_overflow
	bgt $t3,$t0,Label_23_overflow
	bge $t2,$t0,Label_25_no_overflow
Label_23_overflow:
	li $t0,32767
	j Label_22_end
Label_24_overflow_min:
	li $t0,-32767
	j Label_22_end
Label_25_no_overflow:
	move $t0,$t0
	j Label_22_end
Label_22_end:
	beq $t0,$zero,Label_3_End_if_block
	lw $t0, -4($fp)
	move $t0,$t0
	sw $t0, -16($fp)
	lw $t0, -8($fp)
	move $t0,$t0
	sw $t0, -20($fp)
	j Label_5_While_Block_Cond
Label_4_While_Start_block:
	j Label_7_While_Block_Cond
Label_6_While_Start_block:
	lw $t0, -16($fp)
	move $t0,$t0
	lw $t0, -16($fp)
	move $t0,$t0
	lw $t1, -4($fp)
	move $t1,$t1
	li $t2,32767
	li $t3,-32767
	add $t0,$t0,$t1
	blt $t2,$t0,Label_27_overflow
	bgt $t3,$t0,Label_27_overflow
	bge $t2,$t0,Label_29_no_overflow
Label_27_overflow:
	li $t0,32767
	j Label_26_end
Label_28_overflow_min:
	li $t0,-32767
	j Label_26_end
Label_29_no_overflow:
	move $t0,$t0
	j Label_26_end
Label_26_end:
	sw $t0, -16($fp)
Label_7_While_Block_Cond:
	lw $t0, -16($fp)
	move $t0,$t0
	lw $t1, -20($fp)
	move $t1,$t1
	blt $t0,$t1,Label_31_AssignOne
	bge $t0,$t1,Label_32_AssignZero
Label_31_AssignOne:
	li $t0,1
	j Label_30_end
Label_32_AssignZero:
	li $t0,0
	j Label_30_end
Label_30_end:
	bne $t0,$zero,Label_6_While_Start_block
	j Label_9_While_Block_Cond
Label_8_While_Start_block:
	lw $t0, -20($fp)
	move $t0,$t0
	lw $t0, -20($fp)
	move $t0,$t0
	lw $t1, -8($fp)
	move $t1,$t1
	li $t2,32767
	li $t3,-32767
	add $t0,$t0,$t1
	blt $t2,$t0,Label_34_overflow
	bgt $t3,$t0,Label_34_overflow
	bge $t2,$t0,Label_36_no_overflow
Label_34_overflow:
	li $t0,32767
	j Label_33_end
Label_35_overflow_min:
	li $t0,-32767
	j Label_33_end
Label_36_no_overflow:
	move $t0,$t0
	j Label_33_end
Label_33_end:
	sw $t0, -20($fp)
Label_9_While_Block_Cond:
	lw $t0, -20($fp)
	move $t0,$t0
	lw $t1, -16($fp)
	move $t1,$t1
	blt $t0,$t1,Label_38_AssignOne
	bge $t0,$t1,Label_39_AssignZero
Label_38_AssignOne:
	li $t0,1
	j Label_37_end
Label_39_AssignZero:
	li $t0,0
	j Label_37_end
Label_37_end:
	bne $t0,$zero,Label_8_While_Start_block
Label_5_While_Block_Cond:
	li $t0,1
	lw $t1, -16($fp)
	move $t1,$t1
	lw $t2, -20($fp)
	move $t2,$t2
	beq $t1,$t2,Label_40_equal
	bne $t1,$t2,Label_41_not_equal
Label_40_equal:
	li $t1,1
	j Label_42_end
Label_41_not_equal:
	li $t1,0
	j Label_42_end
Label_42_end:
	li $t2,32767
	li $t3,-32767
	sub $t0,$t0,$t1
	blt $t2,$t0,Label_44_overflow
	bgt $t3,$t0,Label_44_overflow
	bge $t2,$t0,Label_46_no_overflow
Label_44_overflow:
	li $t0,32767
	j Label_43_end
Label_45_overflow_min:
	li $t0,-32767
	j Label_43_end
Label_46_no_overflow:
	move $t0,$t0
	j Label_43_end
Label_43_end:
	bne $t0,$zero,Label_4_While_Start_block
	lw $t0, -16($fp)
	move $t0,$t0
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	j END_OF_PROGRAM
Label_3_End_if_block:
	j END_OF_PROGRAM
##### End of main function
END_OF_PROGRAM:
	li $v0,10
	syscall
