.data
string_access_violation: .asciiz "Access Violation"
string_illegal_div_by_0: .asciiz "Illegal Division By Zero"
string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
.text
### start with main function
j main
############################
strlen:
	li $s0, 0
loop_strlen:
	lw $s1, 0($a0)
	beqz $s1, exit_strlen
	addi $a0, $a0, 4
	addi $s0, $s0, 1
	j loop_strlen
exit_strlen:
	move $v0, $s0
	jr $ra
############################
strcpy:
	lb $s0 0($a0)
	beqz $s0, exit_strcpy
	sb $s0 0($a1)
	addi $a0 $a0 1
	addi $a1 $a1 1
	j strcpy
exit_strcpy:
	move $v0, $a1
	jr $ra
############################
strcon:
	addi $sp,$sp,-8
	sw $ra,0($sp)
	move $s0 ,$a2
	move $s1 ,$a0
	move $s2 ,$a1
	li $a0, 4
	mult $a0, $s0
	mflo $a0
	li $v0,9
	syscall
	move $s0,$v0
	sw $s0,4($sp)
	move $a1, $s0
	move $a0, $s1
	jal strcpy
	move $a1, $v0
	move $a0, $s2
	jal strcpy
	sb $zero, 0($v0)
	lw $s0, 4($sp)
	move $v0, $s0
	lw $ra, 0($sp)
	addi $sp,$sp,8
	jr $ra
############################
Label_0_Func_fib:
	addi $sp,$sp,-8
	sw $ra,0($sp)
	addi $sp $sp -4
	sw  $fp 0($sp)
	move $fp,$sp
	addi $sp,$sp,-4
	lw $t0, 0($a0)
	sw $t0, -4($fp)
	lw $t1, -4($fp)
	move $t1,$t1
	li $t2,2
	blt $t1,$t2,Label_3_AssignOne
	bge $t1,$t2,Label_4_AssignZero
Label_3_AssignOne:
	li $t1,1
	j Label_2_end
Label_4_AssignZero:
	li $t1,0
	j Label_2_end
Label_2_end:
	beq $t1,$zero,Label_1_End_if_block
	lw $t0, -4($fp)
	move $t0,$t0
	move $sp, $fp
	lw $fp, 0($fp)
	addi $sp,$sp,4
	lw $ra, 0($sp)
	addi $sp,$sp,4
	sw $t0, 0($sp)
	jr $ra
Label_1_End_if_block:
	addi $sp,$sp,-32
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	li $a0 ,4
	li $v0,9
	syscall
	move $a0,$v0
	addi $sp,$sp,-4
	sw $a0, 0($sp)
	lw $t1, -4($fp)
	move $t1,$t1
	li $t2,1
	li $t3,32767
	li $t4,-32767
	sub $t1,$t1,$t2
	blt $t3,$t1,Label_6_overflow
	bgt $t4,$t1,Label_6_overflow
	bge $t3,$t1,Label_8_no_overflow
Label_6_overflow:
	li $t1,32767
	j Label_5_end
Label_7_overflow_min:
	li $t1,-32767
	j Label_5_end
Label_8_no_overflow:
	move $t1,$t1
	j Label_5_end
Label_5_end:
	lw $a0, 0($sp)
	addi $sp,$sp,4
	sw $t1, 0($a0)
	jal Label_0_Func_fib
	lw $t0, 4($sp)
	lw $t1, 8($sp)
	lw $t2, 12($sp)
	lw $t3, 16($sp)
	lw $t4, 20($sp)
	lw $t5, 24($sp)
	lw $t6, 28($sp)
	lw $t7, 32($sp)
	lw $t0, 0($sp)
	addi $sp,$sp,36
	addi $sp,$sp,-32
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	li $a0 ,4
	li $v0,9
	syscall
	move $a0,$v0
	addi $sp,$sp,-4
	sw $a0, 0($sp)
	lw $t1, -4($fp)
	move $t1,$t1
	li $t2,2
	li $t3,32767
	li $t4,-32767
	sub $t1,$t1,$t2
	blt $t3,$t1,Label_10_overflow
	bgt $t4,$t1,Label_10_overflow
	bge $t3,$t1,Label_12_no_overflow
Label_10_overflow:
	li $t1,32767
	j Label_9_end
Label_11_overflow_min:
	li $t1,-32767
	j Label_9_end
Label_12_no_overflow:
	move $t1,$t1
	j Label_9_end
Label_9_end:
	lw $a0, 0($sp)
	addi $sp,$sp,4
	sw $t1, 0($a0)
	jal Label_0_Func_fib
	lw $t0, 4($sp)
	lw $t1, 8($sp)
	lw $t2, 12($sp)
	lw $t3, 16($sp)
	lw $t4, 20($sp)
	lw $t5, 24($sp)
	lw $t6, 28($sp)
	lw $t7, 32($sp)
	lw $t1, 0($sp)
	addi $sp,$sp,36
	li $t2,32767
	li $t3,-32767
	add $t0,$t0,$t1
	blt $t2,$t0,Label_14_overflow
	bgt $t3,$t0,Label_14_overflow
	bge $t2,$t0,Label_16_no_overflow
Label_14_overflow:
	li $t0,32767
	j Label_13_end
Label_15_overflow_min:
	li $t0,-32767
	j Label_13_end
Label_16_no_overflow:
	move $t0,$t0
	j Label_13_end
Label_13_end:
	move $sp, $fp
	lw $fp, 0($fp)
	addi $sp,$sp,4
	lw $ra, 0($sp)
	addi $sp,$sp,4
	sw $t0, 0($sp)
	jr $ra
	move $sp, $fp
	lw $fp, 0($fp)
	addi $sp,$sp,4
	lw $ra, 0($sp)
	addi $sp,$sp,4
	sw $zero, 0($sp)
	jr $ra
##### End of fib function
main:
	addi $sp $sp -4
	sw  $fp 0($sp)
	move $fp,$sp
	addi $sp,$sp,0
	addi $sp,$sp,-32
	sw $t0, 0($sp)
	sw $t1, 4($sp)
	sw $t2, 8($sp)
	sw $t3, 12($sp)
	sw $t4, 16($sp)
	sw $t5, 20($sp)
	sw $t6, 24($sp)
	sw $t7, 28($sp)
	li $a0 ,4
	li $v0,9
	syscall
	move $a0,$v0
	addi $sp,$sp,-4
	sw $a0, 0($sp)
	li $t1,9
	lw $a0, 0($sp)
	addi $sp,$sp,4
	sw $t1, 0($a0)
	jal Label_0_Func_fib
	lw $t0, 4($sp)
	lw $t1, 8($sp)
	lw $t2, 12($sp)
	lw $t3, 16($sp)
	lw $t4, 20($sp)
	lw $t5, 24($sp)
	lw $t6, 28($sp)
	lw $t7, 32($sp)
	lw $t0, 0($sp)
	addi $sp,$sp,36
	move $a0,$t0
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	j END_OF_PROGRAM
	j END_OF_PROGRAM
##### End of main function
END_OF_PROGRAM:
	li $v0,10
	syscall
